services:
  app:
    platform: linux/x86_64
    build:
      dockerfile: ./.docker/local.dockerfile
      context: .
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    env_file:
      - ./.env
    volumes:
      - ./:/app
    ports:
      - 80:80
      - 443:443
    depends_on:
      - mysql
    networks:
      - backend

  soketi:
    image: quay.io/soketi/soketi:pr-1215-16-alpine
    environment:
      SOKETI_DEBUG: '1'
      SOKETI_METRICS_SERVER_PORT: '9601'
      SOKETI_DB_REDIS_HOST: ${REDIS_HOST}
      SOKETI_DB_REDIS_PORT: ${REDIS_PORT}
      SOKETI_DB_REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - '${SOKETI_PORT:-6001}:6001'
      - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
    command: [ "start", "--log-level", "info" ]
    networks:
      - backend

  redis:
    image: redis:7.4-alpine3.20
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - 6004:${REDIS_PORT}
    volumes:
      - ./.data/redis:/data
    networks:
      - backend

  mysql:
    image: arm64v8/mysql:8.0-oracle
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./.data/mysql:/var/lib/mysql
    networks:
      - backend
    restart: unless-stopped
    ports:
      - 3306:3306

networks:
  backend:
